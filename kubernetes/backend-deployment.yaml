#Deployment configuration for backend
apiVersion: apps/v1
kind: Deployment
metadata: { name: mytrip-backend } #Name of the deployment
spec:
  replicas: 1 #Pod replicas to run
  selector: { matchLabels: { app: mytrip-backend } } #Selector to match pod label

  template:
    metadata: { labels: { app: mytrip-backend } } #Service label to select pods
    spec:
      containers:
        - name: backend #Container name
          image: mytrip-backend:latest #Use local image (latest)
          imagePullPolicy: Never #Not try to build from registry (Used for local builds)
          ports: [{ containerPort: 3000 }] #Port app listeners inside the container
          env:
            - name: MONGO_URI #Environment variable for mongodb
              value: "mongodb://sergio:sergio@mongo:27017/mytrip?authSource=admin"
            - name: JWT_SECRET #Secret JWT to hash the passwords
              value: "8mJ#vCkYxE@fZt^sN!w9GpLdQ3uRbHv0"
            - name: CLOUDINARY_CLOUD #Name of the cloud for Cloudinary
              value: "drmjf3gno"
            - name: CLOUDINARY_API_KEY #API Key for Cloudinary
              value: "626266482323754"
            - name: CLOUDINARY_API_SECRET #Password of the API for Cloudinary
              value: "Qa9G07iCnWwJYXRXNiZ68vPuLF8"
          #Min and max CPU usage
          resources:
            requests:
              cpu: 100m
            limits:
              cpu: 250m
---
#Service to expose backend
apiVersion: v1
kind: Service
metadata: { name: mytrip-backend } #Name of the service
spec:
  selector: { app: mytrip-backend } #Selector to match pod label
  ports:
    - port: 3060 #Port exposed
      targetPort: 3060 #Port container
  type: NodePort #Expose service on a random port between 30000â€“32767